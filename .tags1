!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Min_lon	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::Min_lon = 50;$/;"	member	line:27	class:Map	file:
Max_lon	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::Max_lon = 0;$/;"	member	line:28	class:Map	file:
Min_lat	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::Min_lat = 50;$/;"	member	line:29	class:Map	file:
Max_lat	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::Max_lat = 0;$/;"	member	line:30	class:Map	file:
Alpha	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::Alpha = 0;$/;"	member	line:31	class:Map	file:
Beta	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::Beta = 0;$/;"	member	line:32	class:Map	file:
Delta_Lon	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::Delta_Lon = 0;$/;"	member	line:33	class:Map	file:
Delta_Lat	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::Delta_Lat = 0;$/;"	member	line:34	class:Map	file:
CurrentRoad	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::CurrentRoad = 0;$/;"	member	line:35	class:Map	file:
image	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^cv::Mat Map::image;$/;"	member	line:36	class:Map	file:
imageClose	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^cv::Mat Map::imageClose;$/;"	member	line:37	class:Map	file:
BuildAllRoads	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::BuildAllRoads(int id_road, vector<Node> VEC){$/;"	function	line:39	class:Map	signature:(int id_road, vector<Node> VEC)
ComputeCoefA	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^float Map::ComputeCoefA(Node begin, Node end){$/;"	function	line:76	class:Map	signature:(Node begin, Node end)
CreateAll	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::CreateAll(int close){$/;"	function	line:80	class:Map	signature:(int close)
GetCorrectiveHeading	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^float Map::GetCorrectiveHeading(float DrivenDistance){$/;"	function	line:93	class:Map	signature:(float DrivenDistance)
Display	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::Display(int close){$/;"	function	line:174	class:Map	signature:(int close)
DisplayImage	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::DisplayImage(int close){$/;"	function	line:194	class:Map	signature:(int close)
DisplayMyPosition	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::DisplayMyPosition(int close){$/;"	function	line:205	class:Map	signature:(int close)
DirectDistance	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::DirectDistance(double lat1, double lng1, double lat2, double lng2)$/;"	function	line:222	class:Map	signature:(double lat1, double lng1, double lat2, double lng2)
DisplayAllBuildings	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::DisplayAllBuildings(vector<Building *> v, int close, cv::Mat imageToWriteOn){$/;"	function	line:236	class:Map	signature:(vector<Building *> v, int close, cv::Mat imageToWriteOn)
DisplayAllUserNodes	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::DisplayAllUserNodes(vector<Node *> v, int close, cv::Mat imageToWriteOn){$/;"	function	line:242	class:Map	signature:(vector<Node *> v, int close, cv::Mat imageToWriteOn)
DisplayAllRoads	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::DisplayAllRoads(vector<Road *> v, int close, cv::Mat imageToWriteOn){$/;"	function	line:249	class:Map	signature:(vector<Road *> v, int close, cv::Mat imageToWriteOn)
DisplayPath	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::DisplayPath(int close){$/;"	function	line:258	class:Map	signature:(int close)
GetCloseDisplayX	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::GetCloseDisplayX(double lon){$/;"	function	line:278	class:Map	signature:(double lon)
GetCloseDisplayY	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::GetCloseDisplayY(double lat){$/;"	function	line:283	class:Map	signature:(double lat)
GetDisplayX	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::GetDisplayX(double lon){$/;"	function	line:288	class:Map	signature:(double lon)
GetDisplayY	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::GetDisplayY(double lat){$/;"	function	line:293	class:Map	signature:(double lat)
GetClosestNode	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Node * Map::GetClosestNode(){$/;"	function	line:298	class:Map	signature:()
GetUserNodeById	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Node * Map::GetUserNodeById(double id){$/;"	function	line:323	class:Map	signature:(double id)
GetNodeById	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Node * Map::GetNodeById(double id){$/;"	function	line:333	class:Map	signature:(double id)
GetRoadById	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Road * Map::GetRoadById(double id){$/;"	function	line:343	class:Map	signature:(double id)
GetTupleOfDestinations	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^vector<tuple<string, double>> Map::GetTupleOfDestinations(){$/;"	function	line:354	class:Map	signature:()
SetAlpha	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::SetAlpha(){$/;"	function	line:363	class:Map	signature:()
SetBeta	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::SetBeta(){$/;"	function	line:374	class:Map	signature:()
SetPath	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::SetPath(vector<char *> path){$/;"	function	line:378	class:Map	signature:(vector<char *> path)
SetPosition	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Map::SetPosition(double lon, double lat){$/;"	function	line:392	class:Map	signature:(double lon, double lat)
SetDestination	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::SetDestination(double idDestNode){$/;"	function	line:408	class:Map	signature:(double idDestNode)
ToRadians	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::ToRadians(double degrees)$/;"	function	line:448	class:Map	signature:(double degrees)
WhichRoad	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Map::WhichRoad(double lon, double lat){$/;"	function	line:454	class:Map	signature:(double lon, double lat)
WhichRoadWithLatLon	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Map::WhichRoadWithLatLon(){$/;"	function	line:468	class:Map	signature:()
Map	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Map::Map(char * OsmFilePath){$/;"	function	line:475	class:Map	signature:(char * OsmFilePath)
ToString	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Node::ToString(){$/;"	function	line:665	class:Node	signature:()
Node	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Node::Node(){$/;"	function	line:672	class:Node	signature:()
Node	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Node::Node(double Node_Id, float lon, float lat){$/;"	function	line:676	class:Node	signature:(double Node_Id, float lon, float lat)
operator <	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^bool Node::operator< (const Node &other) {$/;"	function	line:682	class:Node	signature:(const Node &other)
SetName	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Node::SetName(string NAME){$/;"	function	line:686	class:Node	signature:(string NAME)
Display	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Node::Display(int close, cv::Mat imageToWriteOn){$/;"	function	line:691	class:Node	signature:(int close, cv::Mat imageToWriteOn)
DisplayAsPathNode	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Node::DisplayAsPathNode(int close, cv::Mat imageToWriteOn){$/;"	function	line:705	class:Node	signature:(int close, cv::Mat imageToWriteOn)
GetLatitude	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^float Node::GetLatitude(){$/;"	function	line:713	class:Node	signature:()
GetLongitude	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^float Node::GetLongitude(){$/;"	function	line:716	class:Node	signature:()
GetId	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Node::GetId(){$/;"	function	line:719	class:Node	signature:()
NotARoutingNode	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Node::NotARoutingNode(){$/;"	function	line:723	class:Node	signature:()
IsNotRoutingNode	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^int Node::IsNotRoutingNode(){$/;"	function	line:727	class:Node	signature:()
GetName	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^string Node::GetName(){$/;"	function	line:731	class:Node	signature:()
Compute_Coefs	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Road::Compute_Coefs(){$/;"	function	line:748	class:Road	signature:()
ToString	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Road::ToString(){$/;"	function	line:753	class:Road	signature:()
Road	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Road::Road(double Road_Id, vector<Node> VEC){$/;"	function	line:758	class:Road	signature:(double Road_Id, vector<Node> VEC)
Road	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Road::Road(double Road_Id, Node b, Node e){$/;"	function	line:764	class:Road	signature:(double Road_Id, Node b, Node e)
SetEndNode	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Road::SetEndNode(Node e){$/;"	function	line:771	class:Road	signature:(Node e)
SetVecRoadNodes	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Road::SetVecRoadNodes(std::vector<Node> VEC){$/;"	function	line:776	class:Road	signature:(std::vector<Node> VEC)
DistanceToCenter	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Road::DistanceToCenter(double lon, double lat){$/;"	function	line:781	class:Road	signature:(double lon, double lat)
Display	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Road::Display(int close, cv::Mat imageToWriteOn){$/;"	function	line:801	class:Road	signature:(int close, cv::Mat imageToWriteOn)
GetRoadNodes	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^vector<Node> Road::GetRoadNodes(){$/;"	function	line:826	class:Road	signature:()
GetA	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^float Road::GetA(){$/;"	function	line:830	class:Road	signature:()
GetB	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^float Road::GetB(){$/;"	function	line:833	class:Road	signature:()
GetId	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Road::GetId(){$/;"	function	line:836	class:Road	signature:()
GetBegin	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Node Road::GetBegin(){$/;"	function	line:839	class:Road	signature:()
GetEnd	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Node Road::GetEnd(){$/;"	function	line:842	class:Road	signature:()
Building	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^Building::Building(int ID, string NAME, vector<Node> VEC){$/;"	function	line:853	class:Building	signature:(int ID, string NAME, vector<Node> VEC)
Display	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^void Building::Display(int close, cv::Mat imageToWriteOn){$/;"	function	line:860	class:Building	signature:(int close, cv::Mat imageToWriteOn)
GetName	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^string Building::GetName(){$/;"	function	line:894	class:Building	signature:()
GetId	/Users/guiwake/Documents/Programmation/GeoLoc/georouter/WorkingRouterAndParser/parserV1.cpp	/^double Building::GetId(){$/;"	function	line:898	class:Building	signature:()
